apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:5.6
        ports:
        - containerPort: 3306
          protocol: TCP
        volumeMounts:
        - mountPath: /data/db
          name: mysql
      volumes:
      - name: mysql
        persistentVolumeClaim:
          claimName: mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  type: ClusterIP
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: mysql-hpa
spec:
  maxReplicas: 5
  minReplicas: 2
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: mysql-deployment
  targetCPUUtilizationPercentage: 30
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: mysql-allow-from-wordpress
spec:
  policyTypes:
  - Ingress
  podSelector:
    matchLabels:
      app: mysql
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: wordpress
#---
## mysql-pvc-storageclass.yaml
#apiVersion: v1
#kind: Pod
#metadata:
#  name: mysql
#spec:
#  containers:
#  - image: mongo
#    name: mysql
#    volumeMounts:
#    - mountPath: /data/db
#      name: mysql
#  volumes:
#    - name: mysql
#      persistentVolumeClaim:
#        claimName: mysql-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: "mysql-storage-class"

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mysql-storage-class
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-ssd
